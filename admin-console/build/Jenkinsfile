properties([
// описание параметров сборки пайплайна
        parameters(
                [
                        stringParam(
                                name: 'CHART_NAME',
                                defaultValue: 'admin-console'
                        ),
                        stringParam(
                                name: 'IMAGE_TAG',
                                defaultValue: ''
                        ),
                        stringParam(
                                name: 'BUILD_PARAMS',
                                defaultValue: ''
                        ),
                        stringParam(
                                name: 'URL',
                                defaultValue: 'admin-console-postgresql'
                        ),
                        stringParam(
                                name: 'BRANCH',
                                defaultValue: 'develop'
                        )
                ]
        )
])

pipeline {

// параметры конвейера
    options {
        ansiColor('xterm')
        skipDefaultCheckout true
        timestamps()
        disableConcurrentBuilds()
    }

// манифест с описанием спецификации пода сборщика
    agent {
        kubernetes {
            yamlFile 'admin_console/build/builder.yaml'
        }
    }

    stages {
        
// стадия проверки входных параметров
        stage('Checkout') {
            steps {
                script {
                    if (IMAGE_TAG=="") {
                        error("Enter parameter value: IMAGE_TAG")
                        currentBuild.result = 'ABORTED'
                    }
                }
            }
        }

// стадия работы с репозиториями. в credentialsId должен быть указан реальный credentialsId, который добавлен в настройках дженкинса
// репозитории лежат на nfs-сервере
        stage('Clone git repos') {
            steps {
                container('git') {
                    script {
                        sh "git -C /kaniko/workspace/datagram_ci_cd stash"
                        sh "git -C /kaniko/workspace/datagram_ci_cd pull"
                        withCredentials([[
                           $class: 'UsernamePasswordMultiBinding',
                           credentialsId: 'rmusin',
                           usernameVariable: 'USERNAME',
                           passwordVariable: 'PASSWORD'
                        ]]) {
                        sh "rm -rf /kaniko/workspace/airflow-client"
                        sh "git clone https://$USERNAME:$PASSWORD@neogit.neoflex.ru/datagram/airflow-client.git /kaniko/workspace/airflow-client"
                        sh "rm -rf /kaniko/workspace/datagram-admin-console"
                        sh "git clone https://$USERNAME:$PASSWORD@neogit.neoflex.ru/datagram/datagram-admin-console.git \
                            /kaniko/workspace/datagram-admin-console -b ${params.BRANCH}"
                        }
                    }
                }
            }
        }

// стадия сборки библиотек. все данные сохраняются локально на nfs-сервере
        stage('Build airflow-client Jar') {
            steps {
                container('maven') {
                    script {
                        sh "mvn clean install ${params.BUILD_PARAMS} -f /root/.m2/airflow-client/pom.xml"
                    }
                }
            }
        }
            
// стадия сборки основного jar-файла admin_console. все данные сохраняются локально на nfs-сервере
        stage('Build admin-console Jar') {
            steps {
                container('maven') {
                    script {
                        sh "mvn clean install ${params.BUILD_PARAMS} -f /root/.m2/datagram-admin-console/dg-admin-console-bk/pom.xml"
                    }
                }
            }
        }

// стадия сборки докер-образа и загрузка его на докерхаб
        stage('Kaniko Build & Push Image') {
            steps {
                container('kaniko') {
                    script {
                        sh "/kaniko/executor --dockerfile /root/builder/datagram_ci_cd/admin_console/build/Dockerfile \
                            --context /root/builder \
                            --force \
                            --destination=zanzibeer/${params.CHART_NAME}:${params.IMAGE_TAG} \
                            --destination=zanzibeer/${params.CHART_NAME}:latest"
                    }
                }
            }
        }
    }
}
